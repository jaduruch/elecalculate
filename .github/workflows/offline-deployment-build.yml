name: Offline Deployment to Offline Branch

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  offline-deploy:
    name: Build and Deploy Exam-Proof Offline Branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Set pipeline-specific Git identity
        run: |
          git config --global user.name "Elecalculate Offline Deployment"
          git config --global user.email "offline-deployment@elecalculate.com"

      - name: Create artifact commit on top of main
        run: |
          git checkout -b offline-artifact-tmp

          # Generate manifest and hash
          find . -type f \
            ! -name 'deployment.manifest*' \
            ! -name '*.asc' \
            ! -name '*.ots' \
            ! -path './.git/*' \
            -exec sha256sum {} \; | sort > deployment.manifest
          sha256sum deployment.manifest > deployment.manifest.sha256

          # Inject proof box, CSS, and JS
          BUILD_DATE="$(date -u +"%Y-%m-%d %H:%M UTC")"
          MANIFEST_HASH="$(cut -d' ' -f1 deployment.manifest.sha256)"
          MANIFEST_HASH_SHORT="${MANIFEST_HASH:0:8}‚Ä¶${MANIFEST_HASH: -4}"

          sed -i '/<!-- Neuer Inhalt -->/i \
          <div class="proof-box">\
            <h1>Offline-Pr√ºfungsnachweis</h1>\
            <div class="build" title="Zeitpunkt, zu dem diese Version gebaut wurde">‚ÑπÔ∏è Version erstellt: <span id="build-date">'"$BUILD_DATE"'</span></div>\
            <div><span title="Technischer Fingerabdruck dieser Version. Klicken zum Kopieren!">üîí Pr√ºfcode: <span id="manifest-hash" class="hash" title="'"$MANIFEST_HASH"'">'"$MANIFEST_HASH_SHORT"'</span></span><div class="copy-hint" id="copy-hint" style="display:none;">Kopiert!</div></div>\
            <div class="status" id="offline-status" title="Zeigt an, ob du gerade mit dem Internet verbunden bist.">üåê Status: <span class="offline">Offline</span></div>\
            <div class="info">Diese App funktioniert <b>vollst√§ndig offline</b>.<br>Alle Berechnungen und Inhalte sind lokal verf√ºgbar.<br><span style="color:#ffe066;"><br>Kein Zugriff auf das Internet oder externe Ressourcen.</span></div>\
          </div>\
          <style>\
            .proof-box { background: #222; color: #ffe066; border: 2px solid #ffe066; border-radius: 12px; margin: 2.5em auto 2em auto; padding: 2em 2.5em; box-shadow: 0 4px 24px #0008; text-align: center; max-width: 420px; }\
            .proof-box h1 { color: #ffe066; margin-bottom: 0.5em; font-size: 1.7em; margin-top: 0; }\
            .proof-box .status { font-size: 1.1em; margin: 1em 0; }\
            .proof-box .hash { font-family: monospace; background: #333; color: #ffe066; padding: 0.2em 0.6em; border-radius: 4px; margin: 0.2em 0; display: inline-block; cursor: pointer; border: 1px solid #ffe066; }\
            .proof-box .hash:hover { background: #444; text-decoration: underline; }\
            .proof-box .build { color: #b3b3b3; font-size: 0.95em; margin-bottom: 0.5em; }\
            .proof-box .offline { color: #0f0; font-weight: bold; }\
            .proof-box .online { color: #e67e22; font-weight: bold; }\
            .proof-box .info { color: #fff; font-size: 0.95em; margin-top: 1.2em; }\
            .proof-box .copy-hint { color: #ffe066; font-size: 0.9em; margin-top: 0.2em; }\
          </style>\
          <script>\
            function updateStatus(){\
              var el=document.getElementById("offline-status");\
              if(!el)return;\
              var online=navigator.onLine;\
              el.innerHTML="üåê Status: <span class=\\"" + (online ? "online" : "offline") + "\\">" + (online ? "Online (Warnung: Verbindung erkannt!)" : "Offline (OK)") + "</span>";\
            }\
            window.addEventListener("online",updateStatus);\
            window.addEventListener("offline",updateStatus);\
            document.addEventListener("DOMContentLoaded",updateStatus);\
            var hashEl=document.getElementById("manifest-hash");\
            var hintEl=document.getElementById("copy-hint");\
            if(hashEl){\
              hashEl.addEventListener("click",function(){\
                var fullHash=hashEl.getAttribute("title");\
                if(navigator.clipboard){navigator.clipboard.writeText(fullHash);}\
                if(hintEl){\
                  hintEl.style.display="block";\
                  setTimeout(function(){hintEl.style.display="none";},1200);\
                }\
              });\
            }\
          </script>' index.html

          # Add the manifest hash as a comment at the top of index.html for auditability
          sed -i "1i <!-- deployment.manifest.sha256: $(cut -d' ' -f1 deployment.manifest.sha256) -->" index.html

          # Commit the artifact build
          git add index.html deployment.manifest deployment.manifest.sha256
          git commit --allow-empty -m "ci: offline artifact build with manifest and proof box"

      - name: Rebase artifact commit on latest offline-deployment
        run: |
          git fetch origin offline-deployment
          git rebase origin/offline-deployment

      - name: Push artifact commit to offline-deployment
        run: |
          git push origin HEAD:offline-deployment
