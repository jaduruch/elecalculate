name: Sync Main and Development to GitHub Pages

on:
  push:
    branches:
      - main
      - development
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "sync-to-gh-pages"
  cancel-in-progress: true

jobs:
  sync:
    name: Sync Branch Content to GitHub Pages
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history
          ref: main # Start from the main branch
          fetch-tags: true

      - name: 🔍 Debug Workspace After Checkout
        run: |
          echo "Contents of the workspace after checkout:"
          ls -A

      - name: 🛠️ Ensure gh-pages Branch Exists
        run: |
          git fetch --all # Fetch all branches
          if git show-ref --quiet refs/heads/gh-pages; then
            echo "gh-pages branch exists locally. Checking it out..."
            git checkout gh-pages
          elif git ls-remote --exit-code origin gh-pages; then
            echo "gh-pages branch exists remotely. Creating it locally..."
            git checkout -b gh-pages origin/gh-pages
          else
            echo "gh-pages branch does not exist. Creating it..."
            git checkout --orphan gh-pages
            git reset --hard
            echo "gh-pages branch created."
          fi

      - name: 🗺️ Determine Deployment Path
        id: set-path
        run: |
          branch_name=${GITHUB_REF##*/}
          echo "Current branch: $branch_name"
          if [ "$branch_name" == "main" ]; then
            echo "path=." >> $GITHUB_ENV
            echo "✅ Deploying main branch to root (/)."
          elif [ "$branch_name" == "development" ]; then
            echo "path=dev" >> $GITHUB_ENV
            echo "✅ Deploying development branch to /dev."
          else
            echo "❌ Error: Unsupported branch '$branch_name'."
            exit 1
          fi

      - name: 🛠️ Copy Files to Deployment Directory
        run: |
          mkdir -p deployment
          cp -r ./* ./deployment
          echo "Contents of the deployment directory after copying:"
          ls -A ./deployment

      - name: 🔍 Debug Deployment Directory
        run: |
          echo "Contents of the deployment directory before deployment:"
          ls -A ./deployment

      - name: 🚀 Deploy Content to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deployment # Explicitly use the deployment directory
          destination_dir: ${{ env.path }}
