name: Cleanup Orphaned Branch Deployments

on:
  schedule:
    - cron: '0 * * * *' # every hour
  workflow_dispatch:

permissions:
  contents: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Checkout main branch to .main-branch/
        uses: actions/checkout@v4
        with:
          ref: main
          path: .main-branch
          fetch-depth: 0

      - name: Cleanup orphaned branch deployment directories
        id: cleanup
        run: |
          set -e

          echo "==== [AUDIT] Current remote branches ===="
          git fetch origin
          git for-each-ref --format='%(refname:short)' refs/remotes/origin | grep -v '^origin/gh-pages$' | grep -v '^origin/HEAD$' | sed 's|^origin/||'
          echo

          # Build list of current branch deployment dirs
          keep_dirs=""
          for branch in $(git for-each-ref --format='%(refname:short)' refs/remotes/origin | grep -v '^origin/gh-pages$' | grep -v '^origin/HEAD$' | sed 's|^origin/||'); do
            if [ "$branch" = "main" ]; then
              continue
            elif [ "$branch" = "development" ]; then
              keep_dirs="$keep_dirs dev"
            else
              keep_dirs="$keep_dirs ${branch//\//-}"
            fi
          done

          echo "==== [AUDIT] Branch deployment directories (should exist if branch exists) ===="
          for d in $keep_dirs; do
            echo "$d"
          done
          echo

          echo "==== [AUDIT] Directories in gh-pages root ===="
          for dir in */ ; do
            echo "${dir%/}"
          done
          echo

          deleted_any=0

          for dir in */ ; do
            dir=${dir%/}
            # Skip system/special dirs
            case "$dir" in
              .git|.github|.well-known|.main-branch)
                echo "[SKIP] $dir : system/special directory"
                continue
                ;;
            esac

            # Skip the .main-branch temp checkout
            if [ "$dir" = ".main-branch" ]; then
              echo "[SKIP] $dir : temp main branch checkout"
              continue
            fi

            # If dir exists in main, it's main branch content
            if [ -d ".main-branch/$dir" ]; then
              echo "[KEEP] $dir : present in main branch"
              continue
            fi

            # If dir is an active branch deployment dir, keep
            if echo "$keep_dirs" | grep -wq "$dir"; then
              echo "[KEEP] $dir : active branch deployment directory"
              continue
            fi

            # If we reach here, it's an orphaned branch deployment dir
            echo "[DELETE] $dir : orphaned branch deployment directory (not in main, not an active branch preview)"
            rm -rf "$dir"
            deleted_any=1
          done

          if [ $deleted_any -eq 0 ]; then
            echo "::notice::No orphaned deployments to remove."
          else
            echo "::notice::Orphaned deployments were removed. See audit log above."
          fi

      - name: Commit and push changes
        if: steps.cleanup.outcome == 'success'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A ":!./.main-branch"
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Cleanup orphaned branch deployments [automated]"
            git push
          fi